"use strict";(self.webpackChunkflash_list=self.webpackChunkflash_list||[]).push([[295],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2416:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={id:"performance-troubleshooting",title:"Performance troubleshooting",slug:"/performance-troubleshooting",sidebar_position:1},l=void 0,p={unversionedId:"fundamentals/performance-troubleshooting",id:"fundamentals/performance-troubleshooting",title:"Performance troubleshooting",description:"Profiling",source:"@site/docs/fundamentals/performance-troubleshooting.md",sourceDirName:"fundamentals",slug:"/performance-troubleshooting",permalink:"/docs/performance-troubleshooting",editUrl:"https://github.com/shopify/flash-list/edit/main/docusaurus/docs/fundamentals/performance-troubleshooting.md",tags:[],version:"current",lastUpdatedBy:"Marek Fo\u0159t",lastUpdatedAt:1652714674,formattedLastUpdatedAt:"5/16/2022",sidebarPosition:1,frontMatter:{id:"performance-troubleshooting",title:"Performance troubleshooting",slug:"/performance-troubleshooting",sidebar_position:1},sidebar:"autoSidebar",previous:{title:"Usage",permalink:"/docs/usage"},next:{title:"Estimated Item Size Prop",permalink:"/docs/estimated-item-size"}},c=[{value:"Profiling",id:"profiling",children:[],level:2},{value:"How to improve performance",id:"how-to-improve-performance",children:[{value:"Tips:",id:"tips",children:[],level:3}],level:2}],u={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"profiling"},"Profiling"),(0,a.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Before assessing your list's performance, make sure you are in release mode. On Android, you can disable JS dev mode inside the developer menu, whereas you need to run the release configuration on iOS.\nFlashList can appear to be slower than FlatList in dev mode. The primary reason is a much smaller and fixed ",(0,a.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/virtualizedlist#windowsize"},"window size")," equivalent. Click ",(0,a.kt)("a",{parentName:"p",href:"https://reactnative.dev/docs/performance#running-in-development-mode-devtrue"},"here")," to know more about why you shouldn't profile with dev mode on."))),(0,a.kt)("p",null,"The following metrics can be used for profiling the list's overall performance:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"blank area - a size of a visible blank area on scroll.")," Use the built-in ",(0,a.kt)("a",{parentName:"li",href:"/usage#onBlankArea"},(0,a.kt)("inlineCode",{parentName:"a"},"onBlankArea"))," event to get it reported. You can also use this event for tracking this metric in production. Alternatively, you can use ",(0,a.kt)("a",{parentName:"li",href:"https://react-native-performance.docs.shopify.io/guides/react-native-performance-lists-profiler"},"react-native-performance-lists-profiler")," package which also comes with a Flipper plugin."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"TTI - time-to-interactive of the list.")," Comes along with blank area as part of ",(0,a.kt)("a",{parentName:"li",href:"https://react-native-performance.docs.shopify.io/guides/react-native-performance-lists-profiler"},"react-native-performance-lists-profiler")," package. This is a great option for local profiling - however, we do not recommend using it currently in production."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"FPS - frames per second.")," For both native and JS FPS, you can either use the built-in performance monitor or we recommend ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/bamlab/react-native-performance"},"this")," opensource plugin. Using native profilers in Xcode and Android Studio is a yet-another option but they track only the native FPS.")),(0,a.kt)("h2",{id:"how-to-improve-performance"},"How to improve performance"),(0,a.kt)("p",null,"If the numbers indicate that the performance is not good enough, you should act. ",(0,a.kt)("inlineCode",{parentName:"p"},"FlashList")," is much more performant than ",(0,a.kt)("inlineCode",{parentName:"p"},"FlatList")," because it recycles views instead of re-creating them as a user scrolls. But views still need to be rendered as they appear on the screen. Make sure your components are as light as possible without any resource-intensive logic. You can also use React's hooks such as ",(0,a.kt)("inlineCode",{parentName:"p"},"useMemo")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"useCallback")," to further optimize your component."),(0,a.kt)("h3",{id:"tips"},"Tips:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To make your list more performant, ensure ",(0,a.kt)("a",{parentName:"p",href:"/usage#estimateditemsize"},(0,a.kt)("inlineCode",{parentName:"a"},"estimatedItemSize"))," is as close as possible to the real median value. And if you have different types of items, you can improve recycling by using the ",(0,a.kt)("a",{parentName:"p",href:"/usage#getitemtype"},(0,a.kt)("inlineCode",{parentName:"a"},"getItemType"))," prop.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Make sure your cell components don't have a ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," prop. Using this prop will lead to ",(0,a.kt)("inlineCode",{parentName:"p"},"FlashList")," not being able to recycle views, losing all the benefits of using it over ",(0,a.kt)("inlineCode",{parentName:"p"},"FlatList"),"."))))}m.isMDXComponent=!0}}]);